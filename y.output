
state 0
	$accept: .grammar $end 
	stmts: .    (3)

	.  reduce 3 (src line 63)

	grammar  goto 1
	stmts  goto 2

state 1
	$accept:  grammar.$end 

	$end  accept
	.  error


state 2
	grammar:  stmts.    (1)
	stmts:  stmts.stmt 

	Return  shift 12
	If  shift 14
	Switch  shift 15
	Identifier  shift 16
	\n  shift 6
	.  reduce 1 (src line 50)

	identifier  goto 13
	assign_stmt  goto 8
	return_stmt  goto 7
	if_stmt  goto 9
	switch_stmt  goto 10
	assign_block_stmt  goto 11
	simple_stmt  goto 4
	compound_stmt  goto 5
	stmt  goto 3

state 3
	stmts:  stmts stmt.    (2)

	.  reduce 2 (src line 57)


state 4
	stmt:  simple_stmt.\n 
	stmt:  simple_stmt.block 

	\n  shift 17
	.  error

	block  goto 18

state 5
	stmt:  compound_stmt.    (6)

	.  reduce 6 (src line 74)


state 6
	stmt:  \n.    (7)

	.  reduce 7 (src line 75)


state 7
	simple_stmt:  return_stmt.    (8)

	.  reduce 8 (src line 79)


state 8
	simple_stmt:  assign_stmt.    (9)

	.  reduce 9 (src line 80)


state 9
	compound_stmt:  if_stmt.    (12)

	.  reduce 12 (src line 98)


state 10
	compound_stmt:  switch_stmt.    (13)

	.  reduce 13 (src line 99)


state 11
	compound_stmt:  assign_block_stmt.    (14)

	.  reduce 14 (src line 100)


state 12
	return_stmt:  Return.expr 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 19

state 13
	assign_stmt:  identifier.= expr 
	assign_block_stmt:  identifier.= block 

	=  shift 39
	.  error


state 14
	if_stmt:  If.expr block 
	if_stmt:  If.expr block Else block 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 40

state 15
	switch_stmt:  Switch.expr \n case_stmts 
	switch_stmt:  Switch.expr \n case_stmts default_stmt 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 41

state 16
	identifier:  Identifier.    (61)

	.  reduce 61 (src line 262)


state 17
	stmt:  simple_stmt \n.    (4)
	block:  \n.INDENT stmts DEDENT 

	INDENT  shift 42
	.  reduce 4 (src line 67)


state 18
	stmt:  simple_stmt block.    (5)

	.  reduce 5 (src line 70)


state 19
	return_stmt:  Return expr.    (11)
	expr:  expr.binary_op unary_expr 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	.  reduce 11 (src line 91)

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 20
	expr:  (.expr ) 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 65

state 21
	expr:  unary_expr.    (26)

	.  reduce 26 (src line 176)


state 22
	unary_expr:  primary_expr.    (28)
	primary_expr:  primary_expr.field 
	primary_expr:  primary_expr.index 
	primary_expr:  primary_expr.slice 
	primary_expr:  primary_expr.call 

	Field  shift 38
	(  shift 71
	[  shift 70
	.  reduce 28 (src line 186)

	field  goto 66
	index  goto 67
	slice  goto 68
	call  goto 69

state 23
	unary_expr:  unary_op.unary_expr 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 72

state 24
	primary_expr:  literal.    (54)

	.  reduce 54 (src line 230)


state 25
	primary_expr:  identifier.    (55)

	.  reduce 55 (src line 231)


state 26
	primary_expr:  field.    (56)

	.  reduce 56 (src line 232)


state 27
	unary_op:  -.    (51)

	.  reduce 51 (src line 225)


state 28
	unary_op:  !.    (52)

	.  reduce 52 (src line 226)


state 29
	unary_op:  ^.    (53)

	.  reduce 53 (src line 227)


state 30
	literal:  Bool.    (78)

	.  reduce 78 (src line 300)


state 31
	literal:  Rune.    (79)

	.  reduce 79 (src line 301)


state 32
	literal:  String.    (80)

	.  reduce 80 (src line 302)


state 33
	literal:  RawString.    (81)

	.  reduce 81 (src line 303)


state 34
	literal:  Int.    (82)

	.  reduce 82 (src line 304)


state 35
	literal:  Float.    (83)

	.  reduce 83 (src line 305)


state 36
	literal:  Imaginary.    (84)

	.  reduce 84 (src line 306)


state 37
	literal:  Nil.    (85)

	.  reduce 85 (src line 307)


state 38
	field:  Field.    (62)

	.  reduce 62 (src line 264)


state 39
	assign_stmt:  identifier =.expr 
	assign_block_stmt:  identifier =.block 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	\n  shift 75
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 73
	block  goto 74

state 40
	if_stmt:  If expr.block 
	if_stmt:  If expr.block Else block 
	expr:  expr.binary_op unary_expr 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	\n  shift 75
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43
	block  goto 76

state 41
	switch_stmt:  Switch expr.\n case_stmts 
	switch_stmt:  Switch expr.\n case_stmts default_stmt 
	expr:  expr.binary_op unary_expr 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	\n  shift 77
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 42
	block:  \n INDENT.stmts DEDENT 
	stmts: .    (3)

	.  reduce 3 (src line 63)

	stmts  goto 78

state 43
	expr:  expr binary_op.unary_expr 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 79

state 44
	binary_op:  OROR.    (30)

	.  reduce 30 (src line 196)


state 45
	binary_op:  ANDAND.    (31)

	.  reduce 31 (src line 197)


state 46
	binary_op:  rel_op.    (32)

	.  reduce 32 (src line 198)


state 47
	binary_op:  add_op.    (33)

	.  reduce 33 (src line 199)


state 48
	binary_op:  mul_op.    (34)

	.  reduce 34 (src line 200)


state 49
	rel_op:  EQ.    (35)

	.  reduce 35 (src line 203)


state 50
	rel_op:  NE.    (36)

	.  reduce 36 (src line 204)


state 51
	rel_op:  LT.    (37)

	.  reduce 37 (src line 205)


state 52
	rel_op:  LE.    (38)

	.  reduce 38 (src line 206)


state 53
	rel_op:  GT.    (39)

	.  reduce 39 (src line 207)


state 54
	rel_op:  GE.    (40)

	.  reduce 40 (src line 208)


state 55
	add_op:  +.    (41)

	.  reduce 41 (src line 211)


state 56
	add_op:  -.    (42)

	.  reduce 42 (src line 212)


state 57
	add_op:  |.    (43)

	.  reduce 43 (src line 213)


state 58
	mul_op:  *.    (44)

	.  reduce 44 (src line 216)


state 59
	mul_op:  /.    (45)

	.  reduce 45 (src line 217)


state 60
	mul_op:  %.    (46)

	.  reduce 46 (src line 218)


state 61
	mul_op:  LSH.    (47)

	.  reduce 47 (src line 219)


state 62
	mul_op:  RSH.    (48)

	.  reduce 48 (src line 220)


state 63
	mul_op:  &.    (49)

	.  reduce 49 (src line 221)


state 64
	mul_op:  ANDNOT.    (50)

	.  reduce 50 (src line 222)


state 65
	expr:  ( expr.) 
	expr:  expr.binary_op unary_expr 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	)  shift 80
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 66
	primary_expr:  primary_expr field.    (57)

	.  reduce 57 (src line 233)


state 67
	primary_expr:  primary_expr index.    (58)

	.  reduce 58 (src line 240)


state 68
	primary_expr:  primary_expr slice.    (59)

	.  reduce 59 (src line 247)


state 69
	primary_expr:  primary_expr call.    (60)

	.  reduce 60 (src line 254)


state 70
	index:  [.expr ] 
	slice:  [.: ] 
	slice:  [.expr : ] 
	slice:  [.: expr ] 
	slice:  [.expr : expr ] 
	slice:  [.: expr : expr ] 
	slice:  [.expr : expr : expr ] 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	:  shift 82
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 81

state 71
	call:  (.) 
	call:  (.args ) 
	call:  (.args , ) 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	)  shift 83
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 86
	args  goto 84
	exprs  goto 85

state 72
	unary_expr:  unary_op unary_expr.    (29)

	.  reduce 29 (src line 187)


state 73
	assign_stmt:  identifier = expr.    (10)
	expr:  expr.binary_op unary_expr 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	.  reduce 10 (src line 83)

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 74
	assign_block_stmt:  identifier = block.    (23)

	.  reduce 23 (src line 160)


state 75
	block:  \n.INDENT stmts DEDENT 

	INDENT  shift 42
	.  error


state 76
	if_stmt:  If expr block.    (15)
	if_stmt:  If expr block.Else block 

	Else  shift 87
	.  reduce 15 (src line 103)


state 77
	switch_stmt:  Switch expr \n.case_stmts 
	switch_stmt:  Switch expr \n.case_stmts default_stmt 
	case_stmts: .    (20)

	.  reduce 20 (src line 141)

	case_stmts  goto 88

state 78
	stmts:  stmts.stmt 
	block:  \n INDENT stmts.DEDENT 

	Return  shift 12
	If  shift 14
	Switch  shift 15
	Identifier  shift 16
	DEDENT  shift 89
	\n  shift 6
	.  error

	identifier  goto 13
	assign_stmt  goto 8
	return_stmt  goto 7
	if_stmt  goto 9
	switch_stmt  goto 10
	assign_block_stmt  goto 11
	simple_stmt  goto 4
	compound_stmt  goto 5
	stmt  goto 3

state 79
	expr:  expr binary_op unary_expr.    (27)

	.  reduce 27 (src line 177)


state 80
	expr:  ( expr ).    (25)

	.  reduce 25 (src line 175)


state 81
	expr:  expr.binary_op unary_expr 
	index:  [ expr.] 
	slice:  [ expr.: ] 
	slice:  [ expr.: expr ] 
	slice:  [ expr.: expr : expr ] 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	:  shift 91
	]  shift 90
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 82
	slice:  [ :.] 
	slice:  [ :.expr ] 
	slice:  [ :.expr : expr ] 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	]  shift 92
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 93

state 83
	call:  ( ).    (70)

	.  reduce 70 (src line 276)


state 84
	call:  ( args.) 
	call:  ( args., ) 

	)  shift 94
	,  shift 95
	.  error


state 85
	args:  exprs.    (73)
	args:  exprs.... 

	...  shift 96
	.  reduce 73 (src line 281)


state 86
	expr:  expr.binary_op unary_expr 
	exprs:  expr._exprs 
	_exprs: .    (77)

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	.  reduce 77 (src line 296)

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43
	_exprs  goto 97

state 87
	if_stmt:  If expr block Else.block 

	\n  shift 75
	.  error

	block  goto 98

state 88
	switch_stmt:  Switch expr \n case_stmts.    (17)
	switch_stmt:  Switch expr \n case_stmts.default_stmt 
	case_stmts:  case_stmts.case_stmt 

	Case  shift 102
	Default  shift 101
	.  reduce 17 (src line 119)

	case_stmt  goto 100
	default_stmt  goto 99

state 89
	block:  \n INDENT stmts DEDENT.    (24)

	.  reduce 24 (src line 168)


state 90
	index:  [ expr ].    (63)

	.  reduce 63 (src line 266)


state 91
	slice:  [ expr :.] 
	slice:  [ expr :.expr ] 
	slice:  [ expr :.expr : expr ] 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	]  shift 103
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 104

state 92
	slice:  [ : ].    (64)

	.  reduce 64 (src line 268)


state 93
	expr:  expr.binary_op unary_expr 
	slice:  [ : expr.] 
	slice:  [ : expr.: expr ] 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	:  shift 106
	]  shift 105
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 94
	call:  ( args ).    (71)

	.  reduce 71 (src line 277)


state 95
	call:  ( args ,.) 

	)  shift 107
	.  error


state 96
	args:  exprs ....    (74)

	.  reduce 74 (src line 282)


97: shift/reduce conflict (shift 108(0), red'n 75(0)) on ,
state 97
	exprs:  expr _exprs.    (75)
	_exprs:  _exprs., expr 

	,  shift 108
	.  reduce 75 (src line 287)


state 98
	if_stmt:  If expr block Else block.    (16)

	.  reduce 16 (src line 110)


state 99
	switch_stmt:  Switch expr \n case_stmts default_stmt.    (18)

	.  reduce 18 (src line 126)


state 100
	case_stmts:  case_stmts case_stmt.    (19)

	.  reduce 19 (src line 137)


state 101
	default_stmt:  Default.: block 

	:  shift 109
	.  error


state 102
	case_stmt:  Case.expr : block 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 110

state 103
	slice:  [ expr : ].    (65)

	.  reduce 65 (src line 269)


state 104
	expr:  expr.binary_op unary_expr 
	slice:  [ expr : expr.] 
	slice:  [ expr : expr.: expr ] 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	:  shift 112
	]  shift 111
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 105
	slice:  [ : expr ].    (66)

	.  reduce 66 (src line 270)


state 106
	slice:  [ : expr :.expr ] 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 113

state 107
	call:  ( args , ).    (72)

	.  reduce 72 (src line 278)


state 108
	_exprs:  _exprs ,.expr 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 114

state 109
	default_stmt:  Default :.block 

	\n  shift 75
	.  error

	block  goto 115

state 110
	case_stmt:  Case expr.: block 
	expr:  expr.binary_op unary_expr 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	:  shift 116
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 111
	slice:  [ expr : expr ].    (67)

	.  reduce 67 (src line 271)


state 112
	slice:  [ expr : expr :.expr ] 

	-  shift 27
	^  shift 29
	Bool  shift 30
	Rune  shift 31
	Imaginary  shift 36
	Field  shift 38
	Identifier  shift 16
	Int  shift 34
	Float  shift 35
	RawString  shift 33
	String  shift 32
	Nil  shift 37
	(  shift 20
	!  shift 28
	.  error

	identifier  goto 25
	literal  goto 24
	field  goto 26
	unary_op  goto 23
	primary_expr  goto 22
	unary_expr  goto 21
	expr  goto 117

state 113
	expr:  expr.binary_op unary_expr 
	slice:  [ : expr : expr.] 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	]  shift 118
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 114
	expr:  expr.binary_op unary_expr 
	_exprs:  _exprs , expr.    (76)

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	.  reduce 76 (src line 292)

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 115
	default_stmt:  Default : block.    (22)

	.  reduce 22 (src line 153)


state 116
	case_stmt:  Case expr :.block 

	\n  shift 75
	.  error

	block  goto 119

state 117
	expr:  expr.binary_op unary_expr 
	slice:  [ expr : expr : expr.] 

	OROR  shift 44
	ANDAND  shift 45
	EQ  shift 49
	NE  shift 50
	LT  shift 51
	LE  shift 52
	GT  shift 53
	GE  shift 54
	+  shift 55
	-  shift 56
	|  shift 57
	*  shift 58
	/  shift 59
	%  shift 60
	&  shift 63
	LSH  shift 61
	RSH  shift 62
	ANDNOT  shift 64
	]  shift 120
	.  error

	rel_op  goto 46
	add_op  goto 47
	mul_op  goto 48
	binary_op  goto 43

state 118
	slice:  [ : expr : expr ].    (68)

	.  reduce 68 (src line 272)


state 119
	case_stmt:  Case expr : block.    (21)

	.  reduce 21 (src line 145)


state 120
	slice:  [ expr : expr : expr ].    (69)

	.  reduce 69 (src line 273)


52 terminals, 32 nonterminals
86 grammar rules, 121/2000 states
1 shift/reduce, 0 reduce/reduce conflicts reported
81 working sets used
memory: parser 161/30000
86 extra closures
489 shift entries, 1 exceptions
54 goto entries
138 entries saved by goto default
Optimizer space used: output 516/30000
516 table entries, 141 zero
maximum spread: 52, maximum offset: 116
